***ANSWER ALL OF THE QUESTIONS BELOW***

Why do we need data structure?
Answer: Data structures are essential in programming because they allow us to efficiently store, organize, and manipulate data.

What are the various operations that can be performed on different data structures?
Answer: Different data structures support operations such as adding, removing, accessing, searching, and iterating through
elements. The specific operations available depend on the type of data structure. Examples include inserting and removing
elements in arrays, adding and removing elements in lists, pushing and popping elements in stacks, enqueuing and dequeuing
elements in queues, inserting and removing nodes in trees, and adding vertices and edges in graphs.

When would we use data structures in the real world?
Answer: Data structures are used in real-world scenarios such as databases, web applications, file systems, networking,
artificial intelligence, machine learning, and computer graphics. They enable efficient storage, retrieval, and manipulation
of data, improving performance and enabling complex operations.

What is an Array?
Answer: An array is a data structure in Java that can store a fixed-size sequence of elements of the same type. It provides
a way to store and access multiple values using a single variable. Arrays have a contiguous memory layout, and the elements
can be accessed using an index.

What is the difference between Array and ArrayList?
Answer: Arrays have a fixed size and can store both primitive types and objects, while ArrayLists can dynamically resize
and store only objects. ArrayLists provide additional methods for manipulation and offer more flexibility, while arrays
offer direct element access and are more memory-efficient.

What is a LinkedList?
Answer:

How is an Array different from LinkedList?
Answer:

What is a Queue?
Answer:

What is a Stack (referring to data structures)?
Answer:

What is FIFO and LIFO?
Answer:

Explain Big O Notation?
Answer:

What is the best case to search an element from an array?
Answer:

What is the worst case to search an element from an array?
Answer:

Describe what a tree data structure is?
Answer:

Describe what a graph data structure is?
Answer:

What is the difference between the HashTable and HashMap?
Answer:

How do HashMaps work in Java? How do they store values, and when are they useful?
Answer:

What is ArrayIndexOutOfBoundsException in java? When does it occur?
Answer:

What are the different ways of copying an array into another array?
Answer:

What is DFS and BFS?
Answer:

What is Recursion?
Answer:

What are linear and non-linear data Structures?
Answer:

Outline different sorting algorithms and their time complexities:

